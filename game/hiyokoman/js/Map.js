var HiyokoMap = enchant.Class.create(enchant.Map, {
	
	initialize: function(){
		
		//コンストラクタ
		enchant.Map.call(this, 16, 16);
	
		//イメージ
		this.image = game.assets["images/map/map1.png"];	
		
		switch(game.stage){
			
			case 1:
				this.loadData([
				    [33,33,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,33,33],
				    [33,50,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,48,33],
				    [34,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,131,131,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,131,131,131,36,36,36,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,147,149,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,163,165,36,36,36,36,20,20,20,131,131,131,131,131,131,131,131,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,179,181,36,36,36,36,36,36,36,36,36,36,36,36,36,36,131,131,36,36,32],
				    [34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,19,36,36,32],
				    [34,36,36,131,131,36,131,131,131,131,36,36,131,131,131,131,131,131,131,131,36,36,20,4,4,4,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,4,4,4,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,131,131,131,131,131,131,131,131,131,131,131,131,147,149,36,36,36,36,36,36,36,36,32],
				    [34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,4,4,163,165,36,36,36,36,36,36,36,36,32],
				    [34,1,1,36,36,36,36,36,36,36,36,36,36,36,36,36,4,4,36,179,181,131,20,36,36,36,36,1,1,32],
				    [33,18,1,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,1,16,33],
				    [33,33,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,33,33]
				],[
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,9,-1,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,25,-1,9,9,9,25,-1,-1,-1,-1,-1,-1,-1,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1],
				    [-1,-1,-1,-1,9,9,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,9,9,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,25,-1,9,9,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,9,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,9,9,9,9,9,-1,-1,-1,-1,-1,-1,-1,25,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,9,9,9,9,25,25,25,25,-1,-1,-1,-1,-1,25,9,-1,-1,-1,25,25,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,25,25,25,9,9,9,9,25,25,-1,-1,-1,25,25,9,25,25,25,25,25,25,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,9,9,9,9,9,20,25,9,9,9,9,9,9,9,9,25,25,25,25,25,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,25,-1,9,9,9,9,9,-1,-1,20,20,-1,-1,-1,-1,-1,-1,20,25,25,25,20,-1,-1],
				    [-1,-1,-1,-1,25,25,25,9,9,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20,20,-1,-1,-1],
				    [-1,-1,-1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,25,25,25,-1,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,25,25,-1,-1,-1,25,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
				]);
				
				this.collisionData = [
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				    [1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
				    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1],
				    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1]
				];	
				
				break;
				
			case 2:

				this.loadData([
				    [23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23],
				    [23,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,23],
				    [23,82,66,66,66,66,66,82,82,82,82,82,82,82,82,7,7,7,7,7,82,82,82,82,82,82,82,82,82,23],
				    [23,82,66,7,7,7,7,7,7,7,82,82,82,82,7,7,82,82,82,7,7,7,82,82,82,82,82,82,82,23],
				    [23,82,82,66,82,82,66,82,82,7,82,82,82,82,7,82,82,82,82,82,82,7,82,82,82,82,82,82,82,23],
				    [23,82,66,7,82,82,66,82,82,7,82,82,82,82,7,82,82,82,82,82,82,7,82,82,82,82,82,82,82,23],
				    [23,82,66,7,82,82,66,82,82,7,82,82,82,82,7,82,82,82,82,82,82,7,7,7,7,64,82,82,82,23],
				    [23,82,66,7,66,66,66,66,82,7,82,82,82,82,7,7,7,7,82,82,82,82,82,82,7,82,82,82,82,23],
				    [23,82,66,7,7,7,7,7,7,7,82,82,82,82,82,82,82,7,82,82,211,213,82,82,7,82,82,82,82,23],
				    [23,82,66,66,66,66,66,82,82,82,82,82,82,82,82,82,82,7,82,82,243,245,82,82,7,82,82,82,82,23],
				    [23,82,82,7,7,7,7,7,7,7,7,7,7,82,82,82,82,7,7,82,82,82,82,82,7,82,82,82,82,23],
				    [23,82,82,7,82,82,82,82,82,82,82,82,82,82,82,82,82,82,7,82,82,82,82,82,7,82,82,82,82,23],
				    [23,82,82,7,82,82,82,82,82,82,82,82,82,82,82,82,82,82,7,7,7,82,82,82,7,82,82,82,82,23],
				    [23,82,82,7,7,82,82,82,7,7,7,7,7,82,82,82,82,82,82,82,7,82,82,82,7,82,82,82,82,23],
				    [23,82,82,82,7,82,82,82,7,82,82,82,82,82,82,82,82,82,82,82,7,82,82,82,82,82,82,82,82,23],
				    [23,82,82,82,7,82,82,82,7,7,7,7,7,82,82,211,212,213,82,82,7,82,82,82,82,82,82,82,82,23],
				    [23,82,82,82,7,82,82,82,82,82,82,82,7,82,82,227,228,229,82,82,7,82,82,82,82,82,82,82,82,23],
				    [23,82,82,64,7,7,7,7,7,7,7,7,7,82,82,243,244,245,82,82,7,7,7,7,7,82,82,82,82,23],
				    [23,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,23],
				    [23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23]
				],[
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
				]);
				this.collisionData = [
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],
				    [1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],
				    [1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1],
				    [1,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1],
				    [1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1],
				    [1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1],
				    [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1],
				    [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,1],
				    [1,0,0,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1],
				    [1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
				];			
				
				break;

			case 3:
					
				this.loadData([
				    [228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228],
				    [228,228,228,196,196,196,196,196,196,196,196,196,196,196,196,196,6,6,6,196,196,196,196,196,196,196,196,196,228,228],
				    [228,196,6,6,6,196,196,196,196,196,196,196,196,196,196,6,6,6,6,6,196,196,196,196,196,6,6,196,228,228],
				    [228,6,6,6,6,6,196,196,196,196,196,196,196,6,6,6,6,6,6,6,196,196,196,196,6,6,6,196,228,228],
				    [228,6,6,6,6,6,6,196,196,196,196,196,196,6,6,6,6,6,6,6,6,196,196,196,6,6,6,196,228,228],
				    [228,6,6,6,6,6,6,196,196,6,6,6,6,6,6,211,212,213,6,6,6,196,196,196,6,6,6,196,196,228],
				    [228,6,6,6,6,6,6,196,196,6,6,6,6,6,6,227,228,229,6,6,6,6,196,196,6,6,6,6,196,228],
				    [228,6,6,6,6,6,6,196,196,6,6,6,6,6,6,243,244,245,6,6,6,6,196,196,6,6,6,6,196,228],
				    [228,196,6,6,6,6,196,196,196,196,6,6,6,6,6,6,6,6,6,6,6,6,196,196,6,6,6,6,6,228],
				    [228,196,196,6,6,6,196,196,196,196,196,6,6,6,6,6,6,6,6,6,6,6,196,196,6,6,6,6,6,228],
				    [228,196,196,196,196,196,196,196,196,196,196,196,196,196,6,6,6,6,6,6,196,196,196,196,6,6,6,6,6,228],
				    [228,196,196,196,196,6,6,196,196,196,196,196,196,196,6,6,6,6,6,6,196,196,196,196,196,6,6,6,6,228],
				    [228,196,196,196,6,6,6,196,6,6,196,196,196,196,6,6,6,6,6,6,196,196,196,196,196,6,6,6,6,228],
				    [228,196,6,6,6,6,6,6,6,6,6,196,196,196,6,6,6,6,6,6,6,6,196,196,196,196,196,6,6,228],
				    [228,6,6,6,6,6,6,6,6,6,6,6,196,196,6,6,6,6,6,6,6,6,6,196,196,196,196,196,196,228],
				    [228,6,6,6,6,6,6,6,6,6,6,6,196,196,6,6,6,6,6,6,6,6,6,6,6,196,196,196,196,228],
				    [228,196,6,6,6,6,6,6,6,6,6,196,196,196,6,6,6,6,6,6,6,6,6,6,6,6,196,196,196,228],
				    [228,196,196,6,6,6,6,6,6,6,196,196,196,196,6,6,6,6,6,6,6,6,6,6,6,196,196,196,196,228],
				    [228,228,196,196,6,6,6,6,6,196,196,196,196,196,196,196,6,6,6,6,6,6,196,196,196,196,196,196,196,228],
				    [228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228]
				],[
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
				]);
				this.collisionData = [
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1],
				    [1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1],
				    [1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1],
				    [1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1],
				    [1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,1,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
				    [1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1],
				    [1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1],
				    [1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1],
				    [1,1,1,1,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1],
				    [1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
				    [1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],
				    [1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
				    [1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1],
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
				];			
				break;
			
			case 4:
				this.loadData([
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
				    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
				],[
				    [43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],
				    [43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,43,43,43,43,43,43,43,43,43,43,43,-1,-1,-1,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,-1,43,43,43,43,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,43,43,-1,-1,-1,-1,43],
				    [43,43,43,43,-1,-1,43,43,-1,-1,-1,-1,-1,43,43,43,43,43,43,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,-1,43,43,43,43,-1,-1,-1,-1,43,43,43,-1,-1,-1,43,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,43,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,43,-1,-1,43,43,43,43,43,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,43,43,43,43,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,43,43,43,43,-1,43,-1,-1,43,43,-1,-1,-1,-1,43,43,43,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,-1,43,43,43,43,43,43,-1,-1,-1,-1,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,43,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,-1,43,43,43,43,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,43,-1,-1,-1,-1,-1,43,-1,-1,-1,43],
				    [43,-1,-1,43,43,-1,-1,-1,-1,43,43,43,43,43,43,43,43,43,43,-1,-1,-1,-1,43,43,43,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,43],
				    [43,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,-1,43,-1,-1,-1,-1,-1,43],
				    [43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]
				]);
				this.collisionData = [
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1],
				    [1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,1,1,1,1,0,1,0,0,1,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1],
				    [1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,1],
				    [1,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1],
				    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1],
				    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
				];				
				break;
		}
	},
	//衝突判定
	isHit: function(x, y){
		var x2 = (x / this.scaleX);
		var y2 = (y / this.scaleY);		
		
		return this.hitTest(x2, y2);
	},
	checkTile: function(x, y, layer){
		if(x < 0 || this.width <= x || y < 0 || this.height <= y){
			return false;
		} 
		var width = this._image.width;
		var height = this._image.height;
		var tileWidth = this._tileWidth || width;
		var tileHeight = this._tileHeight || height;
		x = x / tileWidth | 0;
		y = y / tileHeight | 0;
		var data = this._data[layer];
		return data[y][x];
	},
	//破壊判定
	isBroken: function(x, y){
		var x2 = (x / this.scaleX);
		var y2 = (y / this.scaleY);		
		var frame0 = this.checkTile(x2, y2, 0);
		var frame1 = this.checkTile(x2, y2, 1);
		
		if(frame0 == 131 || frame0 == 147 || frame0 == 149 || frame0 == 163 || frame0 == 165 || frame0 == 179 || frame0 == 181 || 
		   frame0 == 23 || frame0 == 7){
			return true;
		}
		else if(frame1 == 43){
			return true;
		}
		else{
			return false;
		}
	}
	
});