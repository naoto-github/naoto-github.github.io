<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>M&#39;s Lab.</title>
    <description>椙山女学園大学 向研究室のブログです。日常の記録に加えて、授業資料などを公開しています。</description>
    <link>http://mukai-lab.info//</link>
    <atom:link href="http://mukai-lab.info//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 21 Mar 2016 07:21:08 +0000</pubDate>
    <lastBuildDate>Mon, 21 Mar 2016 07:21:08 +0000</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>抽選は１回だけなの</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://gyazo.com/82d5caf7d29f001f9259751ec6150b21&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/82d5caf7d29f001f9259751ec6150b21.png&quot; alt=&quot;https://gyazo.com/82d5caf7d29f001f9259751ec6150b21&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Mar 2016 07:20:25 +0000</pubDate>
        <link>http://mukai-lab.info//comic/2016/03/21/comic_003.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//comic/2016/03/21/comic_003.html</guid>
        
        
        <category>Comic</category>
        
      </item>
    
      <item>
        <title>単位認定制度は神様！？</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://gyazo.com/e6737f065b1162df49c23fcf93387d4d&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/e6737f065b1162df49c23fcf93387d4d.png&quot; alt=&quot;https://gyazo.com/e6737f065b1162df49c23fcf93387d4d&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Mar 2016 06:38:59 +0000</pubDate>
        <link>http://mukai-lab.info//comic/2016/03/21/comic_002.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//comic/2016/03/21/comic_002.html</guid>
        
        
        <category>Comic</category>
        
      </item>
    
      <item>
        <title>履修登録規制のきょうふ</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://gyazo.com/aefef4e182439281ac30a61194a80db3&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/aefef4e182439281ac30a61194a80db3.png&quot; alt=&quot;https://gyazo.com/aefef4e182439281ac30a61194a80db3&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Mar 2016 07:59:14 +0000</pubDate>
        <link>http://mukai-lab.info//comic/2016/03/18/comic_001.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//comic/2016/03/18/comic_001.html</guid>
        
        
        <category>Comic</category>
        
      </item>
    
      <item>
        <title>Java 8における「Access Restriction」の回避</title>
        <description>&lt;p&gt;Eclipse環境でJavaFX（javafxパッケージ）をインポートしようとすると、
「Access Restriction」エラーとなってしまいコンパイルできません。
JavaFXはJava 8では標準のGUIライブラリとして統合されたはずなのに、
&lt;strong&gt;なんでだー&lt;/strong&gt;となったので回避方法を調べてみました。&lt;/p&gt;

&lt;p&gt;Eclipseのツールバーから[ウィンドウ]-[設定]-[Java]-[コンパイラー]-[エラー/警告]を選択します。
ここで下記のように「使用すべきではない制限されたAPI」の「禁止された参照」を&lt;strong&gt;無視&lt;/strong&gt;に設定します。
これで問題なくインポートできるはずです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/b0d1d728ba365fc184a7cb0621d9653d&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/b0d1d728ba365fc184a7cb0621d9653d.png&quot; alt=&quot;https://gyazo.com/b0d1d728ba365fc184a7cb0621d9653d&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 25 Feb 2016 06:18:31 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/25/javafx.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/25/javafx.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Jekyllでオープン・グラフ・プロトコル（OGP）の設定</title>
        <description>&lt;p&gt;フェイスブックでシェアされたときに表示される画像は、オープン・グラフ・プロトコル（OGP）で制御されています。
OGPの設定がなければ、自動で適当な画像が選択されますが、意図しない画像が選択されることも多いです。
そこで、Jekyllで採用されている「YAML Front Matter」を利用してOGPを設定する方法をメモしておきます。&lt;/p&gt;

&lt;p&gt;まずは、ブログ記事などのファイルの先頭に、
下記のように&lt;em&gt;image&lt;/em&gt;という変数を用意して、参照する画像を設定しておきます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: default
image: &quot;https://i.gyazo.com/cdf2b2e7be4e80421f55152a4b348a7a.png&quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;これで&lt;em&gt;page.image&lt;/em&gt;という記述で設定された値を取得することができるようになります。
次に、”_includes/head.html”に下記のように&lt;em&gt;page.image&lt;/em&gt;を利用してOGPの設定をします。
このとき、条件文を利用することで&lt;em&gt;page.image&lt;/em&gt;が設定されている場合に限ってOGPの設定を有効にしています。
OGPは&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta property=&quot;og:image&quot; content=&quot;参照画像&quot;&amp;gt;&lt;/code&gt;と記述します。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/2d722aa297bd3acaeeac.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;これで、フェイスブックでシェアされたときの画像が設定されます。
もし画像が反映されない場合は、フェイスブックのキャッシュが原因かもしれません。
この場合は、&lt;a href=&quot;https://developers.facebook.com/tools/debug/og/object/&quot;&gt;Open Graph Object Debugger&lt;/a&gt;でキャッシュを削除してみましょう。&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 00:27:33 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/23/ogp.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/23/ogp.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>「コミPo!」でブログのキャラクター作成</title>
        <description>&lt;p&gt;手軽にマンガ表現が可能な&lt;a href=&quot;http://www.comipo.com/&quot;&gt;コミPo!&lt;/a&gt;を利用して、当ブログのキャラクターを作成してみました。
作成したキャラクターは「&lt;strong&gt;ムカイ先生&lt;/strong&gt;」、「&lt;strong&gt;ミッチー先生&lt;/strong&gt;」、「&lt;strong&gt;マヤ先生&lt;/strong&gt;」の三人です。
いずれも&lt;a href=&quot;http://www.sugiyama-u.ac.jp/&quot;&gt;椙山女学園大学&lt;/a&gt;に所属するイニシャルが&lt;strong&gt;M&lt;/strong&gt;の教員がモデルです。
あくまでモデルであって実在の人物とは全くの無関係です（フィクションってやつです！）。
なかでも&lt;strong&gt;ミッチー先生&lt;/strong&gt;は話題豊富な人物なので、彼の特徴を活かしながらブログを楽しく飾っていきたいと思ってます。&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Feb 2016 08:17:29 +0000</pubDate>
        <link>http://mukai-lab.info//life/2016/02/22/character.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//life/2016/02/22/character.html</guid>
        
        
        <category>Life</category>
        
      </item>
    
      <item>
        <title>Git Bashのホームディレクトリの変更</title>
        <description>&lt;p&gt;WindowsでGit環境を構築するとお世話になるであろう&lt;strong&gt;Git Bash&lt;/strong&gt;のホームディレクトリの変更に関してメモします。
GitHubのレポジトリは&lt;em&gt;Z:\GitHub&lt;/em&gt;に設置しているため、この&lt;em&gt;Z:\GitHub&lt;/em&gt;をホームディレクトリに設定することを目指します。&lt;/p&gt;

&lt;p&gt;まずは、Windowsとはいえ&lt;strong&gt;Bash&lt;/strong&gt;であることに変わりはないので、&lt;em&gt;C:\Users\Naoto.bashrc&lt;/em&gt;を作成して、環境変数&lt;em&gt;$HOME&lt;/em&gt;の設定を変更してみます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HOME=/z/GitHub/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これで問題解決と思いきや、&lt;strong&gt;Git Bash&lt;/strong&gt;を実行してみると下記のように、起動時のディレクトリは&lt;em&gt;/c/Users/Naoto&lt;/em&gt;のままです。
ちなみに、環境変数$HOME自体は設定されていて、cdコマンドを実行すると&lt;em&gt;/z/GitHub/&lt;/em&gt;に移動します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/7df1980fbafa2c56129834def138d344&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/7df1980fbafa2c56129834def138d344.png&quot; alt=&quot;https://gyazo.com/7df1980fbafa2c56129834def138d344&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そこで、アプローチを変更して、&lt;strong&gt;Git Bash&lt;/strong&gt;のショートカットアイコンのプロパティを変更してみます。
プロパティには&lt;strong&gt;作業フォルダ&lt;/strong&gt;という項目があり、ここに&lt;em&gt;Z:\GitHub&lt;/em&gt;設定します。
また、リンク先には&lt;strong&gt;–cd-to-home&lt;/strong&gt;という引数が設定されているので削除しておきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64.png&quot; alt=&quot;https://gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これで&lt;strong&gt;Git Bash&lt;/strong&gt;のショートカットアイコンから起動してみると、
下記のように無事にホームディレクトリを変更することができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/1b141e357e770ab203084f6980afeb0d&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/1b141e357e770ab203084f6980afeb0d.png&quot; alt=&quot;https://gyazo.com/1b141e357e770ab203084f6980afeb0d&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Feb 2016 02:34:43 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/17/git-bash.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/17/git-bash.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Liquidを利用したファイルの埋め込み</title>
        <description>&lt;p&gt;Jekyllではテンプレートエンジンとして&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;を採用しています。
この&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;では&lt;strong&gt;タグ&lt;/strong&gt;や&lt;strong&gt;フィルタ&lt;/strong&gt;という機能を利用して、
ウェブページ制作における”めんどうだなぁ”と感じることを減らすことが可能です。&lt;/p&gt;

&lt;p&gt;ここでは、複数のページに共通で利用されるコードの断片を他のファイルから読み込んで埋め込む方法を紹介します。
埋め込むコードを&lt;em&gt;common.html&lt;/em&gt;として作成し、&lt;em&gt;_includes&lt;/em&gt;ディレクトリに配置します。
後はMDファイルやHTMLファイルに下記のように記述するだけです。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/bf18e295f1e9af8438bd.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;その他、&lt;a href=&quot;https://gist.github.com/&quot;&gt;Gist&lt;/a&gt;で公開しているソースコードも下記の方法で公開可能です。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/8af89f7c7dfec393dfc0.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;ただし、&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;jekyll-gist&lt;/a&gt;を事前にインストールし、
さらに、&lt;em&gt;_config.yml&lt;/em&gt;に下記の設定を加えておく必要があるようです。
この&lt;em&gt;_config.yml&lt;/em&gt;の設定は忘れがちになるので特に注意が必要です。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/f68f97641149963bacde.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Wed, 10 Feb 2016 08:45:44 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/10/include.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/10/include.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Github Pagesでの独自ドメインの設定</title>
        <description>&lt;p&gt;ブログを立ち上げたので独自ドメインを取得してみることにしました。
ドメインは&lt;a href=&quot;http://www.onamae.com/&quot;&gt;お名前.com&lt;/a&gt;で、トップレベルドメインには「.info」を選択しました。
１年間の契約でなんと「269円（手数料込）」！
メジャーなトップレベルドメインではないとはいえ、この安さに驚きました（普段、ドメイン取得することないからなぁ）。&lt;/p&gt;

&lt;p&gt;さて、ホスティングしているGithub Pagesを独自ドメインで公開する方法ですが、
様々なサイトで詳しく情報が公開されており、検索すれば容易に発見できると思います。
他と重複する情報とはなりますが、念のためメモしておきたいと思います。&lt;/p&gt;

&lt;p&gt;まずは、&lt;a href=&quot;http://www.onamae.com/&quot;&gt;お名前.com&lt;/a&gt;の設定ですが、
ドメインNaviでGithub PagesのDNSレコードの登録が必要です。
具体的には、下記のようにAレコードとして、&lt;strong&gt;192.30.252.153&lt;/strong&gt;と&lt;strong&gt;192.30.252.154&lt;/strong&gt;を登録するだけです。
（参考：&lt;a href=&quot;https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/&quot;&gt;Github Help&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085.png&quot; alt=&quot;https://gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;次に、自身のレポジトリの設定ですが、&lt;strong&gt;CNAME&lt;/strong&gt;という名前をファイルを作成し、
転送先の独自ドメイン（ここでは&lt;code class=&quot;highlighter-rouge&quot;&gt;muka-lab.info&lt;/code&gt;）を入力します。
後は、このファイルを他のHTMLファイルなどと一緒にデプロイするだけです。
これらの変更の適用には時間がかかるようなので、
少し時間を空けてから転送が成功するか確認しましょう。&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Feb 2016 09:13:03 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/08/domain.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/08/domain.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Jekyllにおけるシンタックスハイライト</title>
        <description>&lt;p&gt;Jekyllが得意とするシンタックスハイライトですが、設定でつまずいたのでメモしておきます。
シンタックスハイライトには&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;や&lt;a href=&quot;http://pygments.org/&quot;&gt;&lt;strong&gt;pygments&lt;/strong&gt;&lt;/a&gt;が利用されるようですが、ここでは&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;を適用してみたいと思います。
まずは、下記のコマンドで&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;をインストールします。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install rouge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;次に、”_config.yml”でシンタックスハイライトに&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;を指定しておきます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;highlighter: rouge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ここまでは、何てことないのですが、ここからつまずきました。
シンタックスハイライトのスタイルは”_syntax-highlighting.scss”で設定されているようです。
色などを変更したい場合は、このファイルを修正すれば良いはずですが、何故か変更が適用されません。&lt;/p&gt;

&lt;p&gt;マークダウンでハイライトするときは、ソースコードを``で囲みます。
変換後のhtmlを確認すると、該当箇所は下記のように、クラス属性に&lt;em&gt;highlighter-rouge&lt;/em&gt;が設定されています。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;再度、”_syntax-highlighting.scss”を確認すると、クラス属性は&lt;em&gt;highlight&lt;/em&gt;として設定されています。
そこで、ファイル内のクラス属性を&lt;em&gt;highlighter-rouge&lt;/em&gt;に置換することで、シンタックスハイライトが適用されました。
試行錯誤の末、シンタックスハイライトの適用までこぎつけましたが、この辺り十分に理解できていないかもしれません。&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2016 02:58:35 +0000</pubDate>
        <link>http://mukai-lab.info//tech/2016/02/05/highlight.html</link>
        <guid isPermaLink="true">http://mukai-lab.info//tech/2016/02/05/highlight.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
  </channel>
</rss>
