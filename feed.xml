<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>M&#39;s Lab.</title>
    <description>椙山女学園大学 向研究室のブログです。日常の記録に加えて、授業資料などを公開しています。</description>
    <link>http://naoto-github.github.io//</link>
    <atom:link href="http://naoto-github.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 18 Feb 2016 08:39:15 +0000</pubDate>
    <lastBuildDate>Thu, 18 Feb 2016 08:39:15 +0000</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Git Bashのホームディレクトリの変更</title>
        <description>&lt;p&gt;WindowsでGit環境を構築するとお世話になるであろう&lt;strong&gt;Git Bash&lt;/strong&gt;のホームディレクトリの変更に関してメモします。
GitHubのレポジトリは&lt;em&gt;Z:\GitHub&lt;/em&gt;に設置しているため、この&lt;em&gt;Z:\GitHub&lt;/em&gt;をホームディレクトリに設定することを目指します。&lt;/p&gt;

&lt;p&gt;まずは、Windowsとはいえ&lt;strong&gt;Bash&lt;/strong&gt;であることに変わりはないので、&lt;em&gt;C:\Users\Naoto.bashrc&lt;/em&gt;を作成して、環境変数&lt;em&gt;$HOME&lt;/em&gt;の設定を変更してみます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HOME=/z/GitHub/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これで問題解決と思いきや、&lt;strong&gt;Git Bash&lt;/strong&gt;を実行してみると下記のように、起動時のディレクトリは&lt;em&gt;/c/Users/Naoto&lt;/em&gt;のままです。
ちなみに、環境変数$HOME自体は設定されていて、cdコマンドを実行すると&lt;em&gt;/z/GitHub/&lt;/em&gt;に移動します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/7df1980fbafa2c56129834def138d344&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/7df1980fbafa2c56129834def138d344.png&quot; alt=&quot;https://gyazo.com/7df1980fbafa2c56129834def138d344&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そこで、アプローチを変更して、&lt;strong&gt;Git Bash&lt;/strong&gt;のショートカットアイコンのプロパティを変更してみます。
プロパティには&lt;strong&gt;作業フォルダ&lt;/strong&gt;という項目があり、ここに&lt;em&gt;Z:\GitHub&lt;/em&gt;設定します。
また、リンク先には&lt;strong&gt;–cd-to-home&lt;/strong&gt;という引数が設定されているので削除しておきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64.png&quot; alt=&quot;https://gyazo.com/f15142fbd59f99d4f7a3ac3aec8b9b64&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これで&lt;strong&gt;Git Bash&lt;/strong&gt;のショートカットアイコンから起動してみると、
下記のように無事にホームディレクトリを変更することができました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/1b141e357e770ab203084f6980afeb0d&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/1b141e357e770ab203084f6980afeb0d.png&quot; alt=&quot;https://gyazo.com/1b141e357e770ab203084f6980afeb0d&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Feb 2016 02:34:43 +0000</pubDate>
        <link>http://naoto-github.github.io//tech/2016/02/17/git-bash.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//tech/2016/02/17/git-bash.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Liquidを利用したファイルの埋め込み</title>
        <description>&lt;p&gt;Jekyllではテンプレートエンジンとして&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;を採用しています。
この&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid&lt;/a&gt;では&lt;strong&gt;タグ&lt;/strong&gt;や&lt;strong&gt;フィルタ&lt;/strong&gt;という機能を利用して、
ウェブページ制作における”めんどうだなぁ”と感じることを減らすことが可能です。&lt;/p&gt;

&lt;p&gt;ここでは、複数のページに共通で利用されるコードの断片を他のファイルから読み込んで埋め込む方法を紹介します。
埋め込むコードを&lt;em&gt;common.html&lt;/em&gt;として作成し、&lt;em&gt;_includes&lt;/em&gt;ディレクトリに配置します。
後はMDファイルやHTMLファイルに下記のように記述するだけです。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/bf18e295f1e9af8438bd.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;その他、&lt;a href=&quot;https://gist.github.com/&quot;&gt;Gist&lt;/a&gt;で公開しているソースコードも下記の方法で公開可能です。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/8af89f7c7dfec393dfc0.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;ただし、&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;jekyll-gist&lt;/a&gt;を事前にインストールし、
さらに、&lt;em&gt;_config.yml&lt;/em&gt;に下記の設定を加えておく必要があるようです。
この&lt;em&gt;_config.yml&lt;/em&gt;の設定は忘れがちになるので特に注意が必要です。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/f68f97641149963bacde.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Wed, 10 Feb 2016 08:45:44 +0000</pubDate>
        <link>http://naoto-github.github.io//tech/2016/02/10/include.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//tech/2016/02/10/include.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Github Pagesでの独自ドメインの設定</title>
        <description>&lt;p&gt;ブログを立ち上げたので独自ドメインを取得してみることにしました。
ドメインは&lt;a href=&quot;http://www.onamae.com/&quot;&gt;お名前.com&lt;/a&gt;で、トップレベルドメインには「.info」を選択しました。
１年間の契約でなんと「269円（手数料込）」！
メジャーなトップレベルドメインではないとはいえ、この安さに驚きました（普段、ドメイン取得することないからなぁ）。&lt;/p&gt;

&lt;p&gt;さて、ホスティングしているGithub Pagesを独自ドメインで公開する方法ですが、
様々なサイトで詳しく情報が公開されており、検索すれば容易に発見できると思います。
他と重複する情報とはなりますが、念のためメモしておきたいと思います。&lt;/p&gt;

&lt;p&gt;まずは、&lt;a href=&quot;http://www.onamae.com/&quot;&gt;お名前.com&lt;/a&gt;の設定ですが、
ドメインNaviでGithub PagesのDNSレコードの登録が必要です。
具体的には、下記のようにAレコードとして、&lt;strong&gt;192.30.252.153&lt;/strong&gt;と&lt;strong&gt;192.30.252.154&lt;/strong&gt;を登録するだけです。
（参考：&lt;a href=&quot;https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/&quot;&gt;Github Help&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085&quot;&gt;&lt;img src=&quot;https://i.gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085.png&quot; alt=&quot;https://gyazo.com/5e28dbf519e0300b47c3a96a6fa6d085&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;次に、自身のレポジトリの設定ですが、&lt;strong&gt;CNAME&lt;/strong&gt;という名前をファイルを作成し、
転送先の独自ドメイン（ここでは&lt;code class=&quot;highlighter-rouge&quot;&gt;muka-lab.info&lt;/code&gt;）を入力します。
後は、このファイルを他のHTMLファイルなどと一緒にデプロイするだけです。
これらの変更の適用には時間がかかるようなので、
少し時間を空けてから転送が成功するか確認しましょう。&lt;/p&gt;

</description>
        <pubDate>Mon, 08 Feb 2016 09:13:03 +0000</pubDate>
        <link>http://naoto-github.github.io//tech/2016/02/08/domain.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//tech/2016/02/08/domain.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Jekyllにおけるシンタックスハイライト</title>
        <description>&lt;p&gt;Jekyllが得意とするシンタックスハイライトですが、設定でつまずいたのでメモしておきます。
シンタックスハイライトには&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;や&lt;a href=&quot;http://pygments.org/&quot;&gt;&lt;strong&gt;pygments&lt;/strong&gt;&lt;/a&gt;が利用されるようですが、ここでは&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;を適用してみたいと思います。
まずは、下記のコマンドで&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;をインストールします。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install rouge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;次に、”_config.yml”でシンタックスハイライトに&lt;a href=&quot;https://github.com/jneen/rouge&quot;&gt;&lt;strong&gt;rouge&lt;/strong&gt;&lt;/a&gt;を指定しておきます。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;highlighter: rouge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ここまでは、何てことないのですが、ここからつまずきました。
シンタックスハイライトのスタイルは”_syntax-highlighting.scss”で設定されているようです。
色などを変更したい場合は、このファイルを修正すれば良いはずですが、何故か変更が適用されません。&lt;/p&gt;

&lt;p&gt;マークダウンでハイライトするときは、ソースコードを``で囲みます。
変換後のhtmlを確認すると、該当箇所は下記のように、クラス属性に&lt;em&gt;highlighter-rouge&lt;/em&gt;が設定されています。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code class=&quot;highlighter-rouge&quot;&amp;gt;&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;再度、”_syntax-highlighting.scss”を確認すると、クラス属性は&lt;em&gt;highlight&lt;/em&gt;として設定されています。
そこで、ファイル内のクラス属性を&lt;em&gt;highlighter-rouge&lt;/em&gt;に置換することで、シンタックスハイライトが適用されました。
試行錯誤の末、シンタックスハイライトの適用までこぎつけましたが、この辺り十分に理解できていないかもしれません。&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2016 02:58:35 +0000</pubDate>
        <link>http://naoto-github.github.io//tech/2016/02/05/highlight.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//tech/2016/02/05/highlight.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>Jekyllデフォルトテンプレートの自動リンク</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;のデフォルトテンプレートでは、
トップページのヘッダ部の右にサイトに含まれるページのリンクを自動的に追加してくれます。
これはとても便利な機能ではあるのですが、ページ数が増えてくると、特定のページは除いて欲しいというケースが発生します。&lt;/p&gt;

&lt;p&gt;そこで、「&lt;a href=&quot;http://jekyllrb.com/docs/frontmatter/&quot;&gt;&lt;strong&gt;YAML Front Matter&lt;/strong&gt;&lt;/a&gt;」を利用して解決します。
まずは、”_templates/page”に、&lt;em&gt;top_link&lt;/em&gt;という名前の変数を下記のように用意します。
これで、新規に作成するページには、&lt;em&gt;top_link&lt;/em&gt;の行が自動的に追加されます。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/1f4a322ec552139c7d83.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;トップページに自動的にリンクを追加する場合は、ページを作成した後で、この&lt;em&gt;top_link&lt;/em&gt;の値を”true”に設定しておきましょう。
次に、”_includes/header.html”に下記のように&lt;em&gt;top_link&lt;/em&gt;に関する条件文を追加します。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/naoto-github/74111e3c2e89884170e1.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;これで、トップページの自動リンクを&lt;em&gt;top_link&lt;/em&gt;という変数で制御できるようになります。&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Feb 2016 09:26:26 +0000</pubDate>
        <link>http://naoto-github.github.io//tech/2016/02/04/top_link.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//tech/2016/02/04/top_link.html</guid>
        
        
        <category>Tech</category>
        
      </item>
    
      <item>
        <title>ブログ始めました</title>
        <description>&lt;p&gt;今日からブログを起ち上げることにしました。
基本的には自分用のメモとしての意味合いが強いですが、
気になった事柄などを、ここにまとめていければ良いかなと思ってます。&lt;/p&gt;

&lt;p&gt;大学の授業資料なども、このサイトで公開したいと思っていますので、
履修している学生の皆さんには定期的にチェックしてもらえれば嬉しいです。&lt;/p&gt;

&lt;p&gt;では、よろしく！&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Feb 2016 08:29:25 +0000</pubDate>
        <link>http://naoto-github.github.io//life/2016/02/03/first-post.html</link>
        <guid isPermaLink="true">http://naoto-github.github.io//life/2016/02/03/first-post.html</guid>
        
        
        <category>Life</category>
        
      </item>
    
  </channel>
</rss>
